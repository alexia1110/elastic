input {
    kafka {
        topics => ["DSS.func-log.api-proc-login-neo"]
        bootstrap_servers => "dctamsbnr01.cl.bsch:9092"
	      codec => "json"
    }
}

filter {



  ruby { code => '
        msn1 = event.get("[message][JsonDataEntrada]")
        msn2 = event.get("[message][JsonDataSalida]")
        msn3 = event.get("[message][NombreController]")
        msn4 = event.get("[message][FlgError]")
        msn5 = event.get("[message][EndPointServicio]")
        msn5 = event.get("[message][RutCLiente]")
        if msn1
          event.set("jsonDataEntrada", msn1)  
        end
        if msn2
          event.set("jsonDataSalida", msn2)  
        end
        if msn1
          event.set("nombreController", msn3)  
        end
        if msn1
          event.set("flgError", msn4)  
        end
        if msn1
          event.set("endPointServicio", msn5)  
        end
        if msn1
          event.set("rutCLiente", msn6)  
        end                                
   '
   }

 

  #  grok {
  #       match => { "message" => "(?<JsonDataEntrada>.{2048})" }
  #       overwrite => ["JsonDataEntrada"]
  # }

    mutate {
    remove_field => ["@timestamp", "@version", "app-name", "SHOULD_LOG_TO_KAFKA", "message", "id_sucursal", "KAFKA_LOGSTASH_TOPIC", "KAFKA_BOOTSTRAP_SERVERS", "rut_comercio", "logger_name"]
    
  }

  #  if [JsonDataEntrada] == "" {
  #            mutate { replace => { "JsonDataEntrada" => "vacio" }}   
  #   }
    #  json {
    #   source => "input"
    #  }
  
  }

output {
     stdout { codec => "json" }
     kafka {
    	      codec => "json"
            topic_id => "neo-crm-log"
            bootstrap_servers => "dctamsbnr01.cl.bsch:9092"
        }

  
} 

